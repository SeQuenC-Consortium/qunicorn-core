"""initial migration

Revision ID: 87eefd9a127c
Revises:
Create Date: 2024-03-15 12:38:37.894205

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "87eefd9a127c"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Deployment",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("deployed_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("deployed_by", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Deployment")),
    )
    op.create_table(
        "Provider",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("with_token", sa.BOOLEAN(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Provider")),
    )
    op.create_table(
        "Device",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("num_qubits", sa.INTEGER(), nullable=False),
        sa.Column("is_simulator", sa.BOOLEAN(), nullable=False),
        sa.Column("is_local", sa.BOOLEAN(), nullable=False),
        sa.Column("provider_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["provider_id"], ["Provider.id"], name=op.f("fk_Device_provider_id_Provider"), ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Device")),
    )
    op.create_table(
        "ProviderAssemblerLanguage",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("provider_id", sa.INTEGER(), nullable=True),
        sa.Column("language", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(
            ["provider_id"], ["Provider.id"], name=op.f("fk_ProviderAssemblerLanguage_provider_id_Provider")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ProviderAssemblerLanguage")),
    )
    op.create_table(
        "QuantumProgram",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("quantum_circuit", sa.Text(), nullable=True),
        sa.Column("assembler_language", sa.String(length=50), nullable=True),
        sa.Column("deployment_id", sa.INTEGER(), nullable=True),
        sa.Column("python_file_path", sa.String(length=500), nullable=True),
        sa.Column("python_file_metadata", sa.String(length=500), nullable=True),
        sa.Column("python_file_options", sa.String(length=500), nullable=True),
        sa.Column("python_file_inputs", sa.String(length=500), nullable=True),
        sa.ForeignKeyConstraint(
            ["deployment_id"],
            ["Deployment.id"],
            name=op.f("fk_QuantumProgram_deployment_id_Deployment"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_QuantumProgram")),
    )
    op.create_table(
        "Job",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("executed_by", sa.String(length=100), nullable=True),
        sa.Column("progress", sa.INTEGER(), nullable=False),
        sa.Column("state", sa.String(length=50), nullable=False),
        sa.Column("shots", sa.INTEGER(), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column("started_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("provider_specific_id", sa.String(length=50), nullable=True),
        sa.Column("celery_id", sa.String(length=50), nullable=True),
        sa.Column("executed_on_id", sa.INTEGER(), nullable=True),
        sa.Column("deployment_id", sa.INTEGER(), nullable=True),
        sa.Column("finished_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["deployment_id"], ["Deployment.id"], name=op.f("fk_Job_deployment_id_Deployment"), ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["executed_on_id"], ["Device.id"], name=op.f("fk_Job_executed_on_id_Device"), ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Job")),
    )
    op.create_table(
        "Result",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("result_dict", sa.JSON(), nullable=True),
        sa.Column("job_id", sa.INTEGER(), nullable=True),
        sa.Column("program_id", sa.INTEGER(), nullable=True),
        sa.Column("meta_data", sa.JSON(), nullable=True),
        sa.Column("result_type", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["job_id"], ["Job.id"], name=op.f("fk_Result_job_id_Job"), ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["program_id"], ["QuantumProgram.id"], name=op.f("fk_Result_program_id_QuantumProgram"), ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_Result")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("Result")
    op.drop_table("Job")
    op.drop_table("QuantumProgram")
    op.drop_table("ProviderAssemblerLanguage")
    op.drop_table("Device")
    op.drop_table("Provider")
    op.drop_table("Deployment")
    # ### end Alembic commands ###
